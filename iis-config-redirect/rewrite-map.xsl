<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE xsl:stylesheet [
	<!ENTITY copy "&#169;">
	<!ENTITY nbsp "&#160;">
]>
<!--
Template to build a redirect config file from a series of XML files in a directory.
-->
<xsl:stylesheet version="3.0"
				xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
				xmlns:xs="http://www.w3.org/2001/XMLSchema"
				xmlns:ou="http://omniupdate.com/XSL/Variables"
				xmlns:fn="http://omniupdate.com/XSL/Functions"
				xmlns:ouc="http://omniupdate.com/XSL/Variables"
				exclude-result-prefixes="ou xsl xs fn ouc"
				expand-text="yes">

	<xsl:import href="variables.xsl" />

    <!-- Location of redirect XML files -->
	<xsl:param name="current-path" select="concat($ou:root, $ou:site, '/_redirects')" />

	<xsl:output method="xml" indent="yes" encoding="UTF-8" version="1.0" />

	<xsl:template match="/document">
		<xsl:comment>
			Do not edit this file directly.
			Add new redirects using the redirect template.
			Edit/Delete existing redirects in the /_redirects/ directory (files are named based on the value in the "key" attribute).

			After making changes, republish this file, followed by the web.config file.
			Changes will not take effect until the web.config file is republished.
		</xsl:comment>
		<rewriteMaps>
			<xsl:apply-templates select="descendant::rewriteMap" />
		</rewriteMaps>
	</xsl:template>

	<xsl:template match="ouc:editor[@wysiwyg = 'no']" />

	<xsl:template match="rewriteMap[@name = 'TemplateRedirects']">
		<rewriteMap name="TemplateRedirects">
			<xsl:for-each select="collection(concat($current-path, '/?select=*.xml'))">
				<xsl:apply-templates select="./comment" />
				<xsl:apply-templates select="./add" />
			</xsl:for-each>
		</rewriteMap>
	</xsl:template>

	<xsl:template match="add">
		<xsl:if test="@comment != ''">
			<xsl:comment> <xsl:value-of select="@comment" /> </xsl:comment>
		</xsl:if>
        <!-- Ensure that key starts and ends with a slash -->
		<xsl:choose>
			<xsl:when test="starts-with(@key, '/') and ends-with(@key, '/')">
				<add key="{@key}" value="{@value}" />
			</xsl:when>
			<xsl:when test="starts-with(@key, '/')">
				<add key="{@key}/" value="{@value}" />
			</xsl:when>
			<xsl:when test="ends-with(@key, '/')">
				<add key="/{@key}" value="{@value}" />
			</xsl:when>
			<xsl:otherwise>
				<add key="/{@key}/" value="{@value}" />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

</xsl:stylesheet>
